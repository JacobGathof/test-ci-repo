### YamlMime:ManagedReference
items:
- uid: UI.DropDownControl
  commentId: T:UI.DropDownControl
  id: DropDownControl
  parent: UI
  children:
  - UI.DropDownControl.activating
  - UI.DropDownControl.boundingBox
  - UI.DropDownControl.BoxFade
  - UI.DropDownControl.boxGradient
  - UI.DropDownControl.buttonGradient
  - UI.DropDownControl.changeInHeight
  - UI.DropDownControl.closeAndPick(System.Int32)
  - UI.DropDownControl.defaultnumber
  - UI.DropDownControl.defaultString
  - UI.DropDownControl.delay
  - UI.DropDownControl.DropDownBoxGradient
  - UI.DropDownControl.DropDownItemGradient
  - UI.DropDownControl.endColor
  - UI.DropDownControl.firstOffset
  - UI.DropDownControl.hangpercentage
  - UI.DropDownControl.hovering
  - UI.DropDownControl.interactable
  - UI.DropDownControl.interactable_
  - UI.DropDownControl.ItemFade
  - UI.DropDownControl.label
  - UI.DropDownControl.maxOptionsShown
  - UI.DropDownControl.oldSlider
  - UI.DropDownControl.onDropClick
  - UI.DropDownControl.onEnter
  - UI.DropDownControl.onExit
  - UI.DropDownControl.onHover
  - UI.DropDownControl.onSelectClick
  - UI.DropDownControl.onValueChanged
  - UI.DropDownControl.options
  - UI.DropDownControl.setActivatinglayer(LayerMask)
  - UI.DropDownControl.setHoveringlayer(LayerMask)
  - UI.DropDownControl.SliderUpdate
  - UI.DropDownControl.startColor
  - UI.DropDownControl.template
  langs:
  - csharp
  - vb
  name: DropDownControl
  nameWithType: DropDownControl
  fullName: UI.DropDownControl
  type: Class
  source:
    id: DropDownControl
    path: ''
    startLine: 2408
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: 'public class DropDownControl : MonoBehaviour'
    content.vb: >-
      Public Class DropDownControl

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: UI.DropDownControl.interactable
  commentId: F:UI.DropDownControl.interactable
  id: interactable
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: interactable
  nameWithType: DropDownControl.interactable
  fullName: UI.DropDownControl.interactable
  type: Field
  source:
    id: interactable
    path: ''
    startLine: 2446
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nthis is the bool used to determine if the item is interactable\n"
  example: []
  syntax:
    content: public bool interactable
    return:
      type: System.Boolean
    content.vb: Public interactable As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.hovering
  commentId: F:UI.DropDownControl.hovering
  id: hovering
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: hovering
  nameWithType: DropDownControl.hovering
  fullName: UI.DropDownControl.hovering
  type: Field
  source:
    id: hovering
    path: ''
    startLine: 2451
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThis is the layer mask that will be used to determine if the buttons are being hovered on\n"
  example: []
  syntax:
    content: public LayerMask hovering
    return:
      type: LayerMask
    content.vb: Public hovering As LayerMask
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.activating
  commentId: F:UI.DropDownControl.activating
  id: activating
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: activating
  nameWithType: DropDownControl.activating
  fullName: UI.DropDownControl.activating
  type: Field
  source:
    id: activating
    path: ''
    startLine: 2456
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThis is the layer mask that will be used to determine if the buttons are being activated\n"
  example: []
  syntax:
    content: public LayerMask activating
    return:
      type: LayerMask
    content.vb: Public activating As LayerMask
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.interactable_
  commentId: P:UI.DropDownControl.interactable_
  id: interactable_
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: interactable_
  nameWithType: DropDownControl.interactable_
  fullName: UI.DropDownControl.interactable_
  type: Property
  source:
    id: interactable_
    path: ''
    startLine: 2466
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWeather the dropdown is interactable, sets all items to off, but will not set all items to on if they were off before\n"
  example: []
  syntax:
    content: public bool interactable_ { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\nThe boolean that represents the state of the system\n"
    content.vb: Public Property interactable_ As Boolean
  overload: UI.DropDownControl.interactable_*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.template
  commentId: F:UI.DropDownControl.template
  id: template
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: template
  nameWithType: DropDownControl.template
  fullName: UI.DropDownControl.template
  type: Field
  source:
    id: template
    path: ''
    startLine: 2496
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThe sub item that will be created in the dropdown\n"
  example: []
  syntax:
    content: public GameObject template
    return:
      type: GameObject
    content.vb: Public template As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.changeInHeight
  commentId: F:UI.DropDownControl.changeInHeight
  id: changeInHeight
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: changeInHeight
  nameWithType: DropDownControl.changeInHeight
  fullName: UI.DropDownControl.changeInHeight
  type: Field
  source:
    id: changeInHeight
    path: ''
    startLine: 2502
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThe difference in the heights of the item when drawn\n"
  example: []
  syntax:
    content: public float changeInHeight
    return:
      type: System.Single
    content.vb: Public changeInHeight As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.firstOffset
  commentId: F:UI.DropDownControl.firstOffset
  id: firstOffset
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: firstOffset
  nameWithType: DropDownControl.firstOffset
  fullName: UI.DropDownControl.firstOffset
  type: Field
  source:
    id: firstOffset
    path: ''
    startLine: 2508
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThe distance from base item and the first item of the dropdown\n"
  example: []
  syntax:
    content: public float firstOffset
    return:
      type: System.Single
    content.vb: Public firstOffset As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.boundingBox
  commentId: F:UI.DropDownControl.boundingBox
  id: boundingBox
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: boundingBox
  nameWithType: DropDownControl.boundingBox
  fullName: UI.DropDownControl.boundingBox
  type: Field
  source:
    id: boundingBox
    path: ''
    startLine: 2514
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThe item that will surround all the items in the dropdown\n"
  example: []
  syntax:
    content: public GameObject boundingBox
    return:
      type: GameObject
    content.vb: Public boundingBox As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.defaultString
  commentId: F:UI.DropDownControl.defaultString
  id: defaultString
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: defaultString
  nameWithType: DropDownControl.defaultString
  fullName: UI.DropDownControl.defaultString
  type: Field
  source:
    id: defaultString
    path: ''
    startLine: 2520
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThe option that is selected if there is no input\n"
  example: []
  syntax:
    content: public string defaultString
    return:
      type: System.String
    content.vb: Public defaultString As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.defaultnumber
  commentId: F:UI.DropDownControl.defaultnumber
  id: defaultnumber
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: defaultnumber
  nameWithType: DropDownControl.defaultnumber
  fullName: UI.DropDownControl.defaultnumber
  type: Field
  source:
    id: defaultnumber
    path: ''
    startLine: 2527
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWhere in the list the item will appear in the drop down. If it will not appear in the dropdown, set to -1\n"
  example: []
  syntax:
    content: public int defaultnumber
    return:
      type: System.Int32
    content.vb: Public defaultnumber As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.maxOptionsShown
  commentId: F:UI.DropDownControl.maxOptionsShown
  id: maxOptionsShown
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: maxOptionsShown
  nameWithType: DropDownControl.maxOptionsShown
  fullName: UI.DropDownControl.maxOptionsShown
  type: Field
  source:
    id: maxOptionsShown
    path: ''
    startLine: 2533
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nHow many options you can display\n"
  example: []
  syntax:
    content: public int maxOptionsShown
    return:
      type: System.Int32
    content.vb: Public maxOptionsShown As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.oldSlider
  commentId: F:UI.DropDownControl.oldSlider
  id: oldSlider
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: oldSlider
  nameWithType: DropDownControl.oldSlider
  fullName: UI.DropDownControl.oldSlider
  type: Field
  source:
    id: oldSlider
    path: ''
    startLine: 2540
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nLegacy code for implementing slider, may see the light of day pending slider support.\nCurrently uses a normal Unity slider, but this would require a legitimate VR slider to be of use.\n"
  example: []
  syntax:
    content: public Slider oldSlider
    return:
      type: Slider
    content.vb: Public oldSlider As Slider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.hangpercentage
  commentId: F:UI.DropDownControl.hangpercentage
  id: hangpercentage
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: hangpercentage
  nameWithType: DropDownControl.hangpercentage
  fullName: UI.DropDownControl.hangpercentage
  type: Field
  source:
    id: hangpercentage
    path: ''
    startLine: 2545
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nAffects when an item will be faded out in the slider implementation\n"
  example: []
  syntax:
    content: public float hangpercentage
    return:
      type: System.Single
    content.vb: Public hangpercentage As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.DropDownBoxGradient
  commentId: F:UI.DropDownControl.DropDownBoxGradient
  id: DropDownBoxGradient
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: DropDownBoxGradient
  nameWithType: DropDownControl.DropDownBoxGradient
  fullName: UI.DropDownControl.DropDownBoxGradient
  type: Field
  source:
    id: DropDownBoxGradient
    path: ''
    startLine: 2551
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public bool DropDownBoxGradient
    return:
      type: System.Boolean
    content.vb: Public DropDownBoxGradient As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.boxGradient
  commentId: F:UI.DropDownControl.boxGradient
  id: boxGradient
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: boxGradient
  nameWithType: DropDownControl.boxGradient
  fullName: UI.DropDownControl.boxGradient
  type: Field
  source:
    id: boxGradient
    path: ''
    startLine: 2557
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public Gradient boxGradient
    return:
      type: Gradient
    content.vb: Public boxGradient As Gradient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.BoxFade
  commentId: F:UI.DropDownControl.BoxFade
  id: BoxFade
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: BoxFade
  nameWithType: DropDownControl.BoxFade
  fullName: UI.DropDownControl.BoxFade
  type: Field
  source:
    id: BoxFade
    path: ''
    startLine: 2563
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public float BoxFade
    return:
      type: System.Single
    content.vb: Public BoxFade As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.delay
  commentId: F:UI.DropDownControl.delay
  id: delay
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: delay
  nameWithType: DropDownControl.delay
  fullName: UI.DropDownControl.delay
  type: Field
  source:
    id: delay
    path: ''
    startLine: 2569
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public float delay
    return:
      type: System.Single
    content.vb: Public delay As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.DropDownItemGradient
  commentId: F:UI.DropDownControl.DropDownItemGradient
  id: DropDownItemGradient
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: DropDownItemGradient
  nameWithType: DropDownControl.DropDownItemGradient
  fullName: UI.DropDownControl.DropDownItemGradient
  type: Field
  source:
    id: DropDownItemGradient
    path: ''
    startLine: 2575
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public bool DropDownItemGradient
    return:
      type: System.Boolean
    content.vb: Public DropDownItemGradient As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.buttonGradient
  commentId: F:UI.DropDownControl.buttonGradient
  id: buttonGradient
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: buttonGradient
  nameWithType: DropDownControl.buttonGradient
  fullName: UI.DropDownControl.buttonGradient
  type: Field
  source:
    id: buttonGradient
    path: ''
    startLine: 2581
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public Gradient buttonGradient
    return:
      type: Gradient
    content.vb: Public buttonGradient As Gradient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.ItemFade
  commentId: F:UI.DropDownControl.ItemFade
  id: ItemFade
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: ItemFade
  nameWithType: DropDownControl.ItemFade
  fullName: UI.DropDownControl.ItemFade
  type: Field
  source:
    id: ItemFade
    path: ''
    startLine: 2587
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public float ItemFade
    return:
      type: System.Single
    content.vb: Public ItemFade As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.startColor
  commentId: F:UI.DropDownControl.startColor
  id: startColor
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: startColor
  nameWithType: DropDownControl.startColor
  fullName: UI.DropDownControl.startColor
  type: Field
  source:
    id: startColor
    path: ''
    startLine: 2593
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public Color startColor
    return:
      type: Color
    content.vb: Public startColor As Color
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.endColor
  commentId: F:UI.DropDownControl.endColor
  id: endColor
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: endColor
  nameWithType: DropDownControl.endColor
  fullName: UI.DropDownControl.endColor
  type: Field
  source:
    id: endColor
    path: ''
    startLine: 2599
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nWill the dropdown box use gradient or switch implementation\n"
  example: []
  syntax:
    content: public Color endColor
    return:
      type: Color
    content.vb: Public endColor As Color
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.label
  commentId: F:UI.DropDownControl.label
  id: label
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: label
  nameWithType: DropDownControl.label
  fullName: UI.DropDownControl.label
  type: Field
  source:
    id: label
    path: ''
    startLine: 2602
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public TextMesh label
    return:
      type: TextMesh
    content.vb: Public label As TextMesh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.onDropClick
  commentId: F:UI.DropDownControl.onDropClick
  id: onDropClick
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: onDropClick
  nameWithType: DropDownControl.onDropClick
  fullName: UI.DropDownControl.onDropClick
  type: Field
  source:
    id: onDropClick
    path: ''
    startLine: 2604
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public UnityEvent onDropClick
    return:
      type: UnityEvent
    content.vb: Public onDropClick As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.onSelectClick
  commentId: F:UI.DropDownControl.onSelectClick
  id: onSelectClick
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: onSelectClick
  nameWithType: DropDownControl.onSelectClick
  fullName: UI.DropDownControl.onSelectClick
  type: Field
  source:
    id: onSelectClick
    path: ''
    startLine: 2606
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public UnityEvent onSelectClick
    return:
      type: UnityEvent
    content.vb: Public onSelectClick As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.onHover
  commentId: F:UI.DropDownControl.onHover
  id: onHover
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: onHover
  nameWithType: DropDownControl.onHover
  fullName: UI.DropDownControl.onHover
  type: Field
  source:
    id: onHover
    path: ''
    startLine: 2608
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public UnityEvent onHover
    return:
      type: UnityEvent
    content.vb: Public onHover As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.onEnter
  commentId: F:UI.DropDownControl.onEnter
  id: onEnter
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: onEnter
  nameWithType: DropDownControl.onEnter
  fullName: UI.DropDownControl.onEnter
  type: Field
  source:
    id: onEnter
    path: ''
    startLine: 2610
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public UnityEvent onEnter
    return:
      type: UnityEvent
    content.vb: Public onEnter As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.onExit
  commentId: F:UI.DropDownControl.onExit
  id: onExit
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: onExit
  nameWithType: DropDownControl.onExit
  fullName: UI.DropDownControl.onExit
  type: Field
  source:
    id: onExit
    path: ''
    startLine: 2612
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public UnityEvent onExit
    return:
      type: UnityEvent
    content.vb: Public onExit As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.onValueChanged
  commentId: F:UI.DropDownControl.onValueChanged
  id: onValueChanged
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: onValueChanged
  nameWithType: DropDownControl.onValueChanged
  fullName: UI.DropDownControl.onValueChanged
  type: Field
  source:
    id: onValueChanged
    path: ''
    startLine: 2625
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public DropDownControl.onValueChange onValueChanged
    return:
      type: UI.DropDownControl.onValueChange
    content.vb: Public onValueChanged As DropDownControl.onValueChange
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.options
  commentId: F:UI.DropDownControl.options
  id: options
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: options
  nameWithType: DropDownControl.options
  fullName: UI.DropDownControl.options
  type: Field
  source:
    id: options
    path: ''
    startLine: 2631
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nlets users create buttons in the menu, contains information about making buttons on dropdown activation\n"
  example: []
  syntax:
    content: public DropDownControl.Option[] options
    return:
      type: UI.DropDownControl.Option[]
    content.vb: Public options As DropDownControl.Option()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.SliderUpdate
  commentId: M:UI.DropDownControl.SliderUpdate
  id: SliderUpdate
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: SliderUpdate()
  nameWithType: DropDownControl.SliderUpdate()
  fullName: UI.DropDownControl.SliderUpdate()
  type: Method
  source:
    id: SliderUpdate
    path: ''
    startLine: 2928
  assemblies:
  - cs.temp.dll
  namespace: UI
  syntax:
    content: public void SliderUpdate()
    content.vb: Public Sub SliderUpdate
  overload: UI.DropDownControl.SliderUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.closeAndPick(System.Int32)
  commentId: M:UI.DropDownControl.closeAndPick(System.Int32)
  id: closeAndPick(System.Int32)
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: closeAndPick(Int32)
  nameWithType: DropDownControl.closeAndPick(Int32)
  fullName: UI.DropDownControl.closeAndPick(System.Int32)
  type: Method
  source:
    id: closeAndPick
    path: ''
    startLine: 3028
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nThis will handle the selection process and the event handling, calls the deconstruction.\n"
  example: []
  syntax:
    content: public void closeAndPick(int chosen)
    parameters:
    - id: chosen
      type: System.Int32
      description: The integer of the index of the item in the options array that was picked
    content.vb: Public Sub closeAndPick(chosen As Integer)
  overload: UI.DropDownControl.closeAndPick*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.setHoveringlayer(LayerMask)
  commentId: M:UI.DropDownControl.setHoveringlayer(LayerMask)
  id: setHoveringlayer(LayerMask)
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: setHoveringlayer(LayerMask)
  nameWithType: DropDownControl.setHoveringlayer(LayerMask)
  fullName: UI.DropDownControl.setHoveringlayer(LayerMask)
  type: Method
  source:
    id: setHoveringlayer
    path: ''
    startLine: 3049
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nsetter for the hovering layer\n"
  example: []
  syntax:
    content: public void setHoveringlayer(LayerMask hovering)
    parameters:
    - id: hovering
      type: LayerMask
      description: The layer mask we are using for hovering
    content.vb: Public Sub setHoveringlayer(hovering As LayerMask)
  overload: UI.DropDownControl.setHoveringlayer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UI.DropDownControl.setActivatinglayer(LayerMask)
  commentId: M:UI.DropDownControl.setActivatinglayer(LayerMask)
  id: setActivatinglayer(LayerMask)
  parent: UI.DropDownControl
  langs:
  - csharp
  - vb
  name: setActivatinglayer(LayerMask)
  nameWithType: DropDownControl.setActivatinglayer(LayerMask)
  fullName: UI.DropDownControl.setActivatinglayer(LayerMask)
  type: Method
  source:
    id: setActivatinglayer
    path: ''
    startLine: 3057
  assemblies:
  - cs.temp.dll
  namespace: UI
  summary: "\nsetter for the activating layer\n"
  example: []
  syntax:
    content: public void setActivatinglayer(LayerMask activating)
    parameters:
    - id: activating
      type: LayerMask
      description: The layer mask we are using for activating
    content.vb: Public Sub setActivatinglayer(activating As LayerMask)
  overload: UI.DropDownControl.setActivatinglayer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: UI
  commentId: N:UI
  name: UI
  nameWithType: UI
  fullName: UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: LayerMask
  isExternal: true
  name: LayerMask
  nameWithType: LayerMask
  fullName: LayerMask
- uid: UI.DropDownControl.interactable_*
  commentId: Overload:UI.DropDownControl.interactable_
  name: interactable_
  nameWithType: DropDownControl.interactable_
  fullName: UI.DropDownControl.interactable_
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Slider
  commentId: '!:Slider'
  isExternal: true
  name: Slider
  nameWithType: Slider
  fullName: Slider
- uid: Gradient
  isExternal: true
  name: Gradient
  nameWithType: Gradient
  fullName: Gradient
- uid: Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: TextMesh
  commentId: '!:TextMesh'
  isExternal: true
  name: TextMesh
  nameWithType: TextMesh
  fullName: TextMesh
- uid: UnityEvent
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEvent
- uid: UI.DropDownControl.onValueChange
  commentId: T:UI.DropDownControl.onValueChange
  parent: UI
  name: DropDownControl.onValueChange
  nameWithType: DropDownControl.onValueChange
  fullName: UI.DropDownControl.onValueChange
- uid: UI.DropDownControl.Option[]
  isExternal: true
  name: DropDownControl.Option[]
  nameWithType: DropDownControl.Option[]
  fullName: UI.DropDownControl.Option[]
  nameWithType.vb: DropDownControl.Option()
  fullName.vb: UI.DropDownControl.Option()
  name.vb: DropDownControl.Option()
  spec.csharp:
  - uid: UI.DropDownControl.Option
    name: DropDownControl.Option
    nameWithType: DropDownControl.Option
    fullName: UI.DropDownControl.Option
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UI.DropDownControl.Option
    name: DropDownControl.Option
    nameWithType: DropDownControl.Option
    fullName: UI.DropDownControl.Option
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: UI.DropDownControl.SliderUpdate*
  commentId: Overload:UI.DropDownControl.SliderUpdate
  name: SliderUpdate
  nameWithType: DropDownControl.SliderUpdate
  fullName: UI.DropDownControl.SliderUpdate
- uid: UI.DropDownControl.closeAndPick*
  commentId: Overload:UI.DropDownControl.closeAndPick
  name: closeAndPick
  nameWithType: DropDownControl.closeAndPick
  fullName: UI.DropDownControl.closeAndPick
- uid: UI.DropDownControl.setHoveringlayer*
  commentId: Overload:UI.DropDownControl.setHoveringlayer
  name: setHoveringlayer
  nameWithType: DropDownControl.setHoveringlayer
  fullName: UI.DropDownControl.setHoveringlayer
- uid: UI.DropDownControl.setActivatinglayer*
  commentId: Overload:UI.DropDownControl.setActivatinglayer
  name: setActivatinglayer
  nameWithType: DropDownControl.setActivatinglayer
  fullName: UI.DropDownControl.setActivatinglayer

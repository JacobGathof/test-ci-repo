<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class GestureMonitor
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class GestureMonitor
   ">
    <meta name="generator" content="docfx 2.41.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Gestures.GestureMonitor">
  
  
  <h1 id="Gestures_GestureMonitor" data-uid="Gestures.GestureMonitor" class="text-break">Class GestureMonitor
  </h1>
  <div class="markdown level0 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Class responsible for tracking gestures. See <span class="xref">TrackerSetup</span> for example of how to set up instance.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">GestureMonitor</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="Gestures.html">Gestures</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="Gestures_GestureMonitor_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class GestureMonitor : MonoBehaviour</code></pre>
  </div>
  <h3 id="fields">Fields
  </h3>
  
  
  <h4 id="Gestures_GestureMonitor_bufferSize" data-uid="Gestures.GestureMonitor.bufferSize">bufferSize</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int bufferSize</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Gestures_GestureMonitor_controller" data-uid="Gestures.GestureMonitor.controller">controller</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IController controller</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Gestures.IController.html">IController</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Gestures_GestureMonitor_lineRenderer" data-uid="Gestures.GestureMonitor.lineRenderer">lineRenderer</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public LineRenderer lineRenderer</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">LineRenderer</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="Gestures_GestureMonitor_AddGesture_" data-uid="Gestures.GestureMonitor.AddGesture*"></a>
  <h4 id="Gestures_GestureMonitor_AddGesture_System_String_Gestures_Gesture_" data-uid="Gestures.GestureMonitor.AddGesture(System.String,Gestures.Gesture)">AddGesture(String, Gesture)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a new Gesture to be tracked</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddGesture(string name, Gesture g)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The name to reference the Gesture by</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Gestures.Gesture.html">Gesture</a></td>
        <td><span class="parametername">g</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The instance of a Gesture to track</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_AddGestureCompleteCallback_" data-uid="Gestures.GestureMonitor.AddGestureCompleteCallback*"></a>
  <h4 id="Gestures_GestureMonitor_AddGestureCompleteCallback_UnityAction_Gestures_GestureMetaData__" data-uid="Gestures.GestureMonitor.AddGestureCompleteCallback(UnityAction{Gestures.GestureMetaData})">AddGestureCompleteCallback(UnityAction&lt;GestureMetaData&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add an event listener for when a user completes a valid Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddGestureCompleteCallback(UnityAction&lt;GestureMetaData&gt; eve)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityAction</span>&lt;<a class="xref" href="Gestures.GestureMetaData.html">GestureMetaData</a>&gt;</td>
        <td><span class="parametername">eve</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_AddGestureFailedCallback_" data-uid="Gestures.GestureMonitor.AddGestureFailedCallback*"></a>
  <h4 id="Gestures_GestureMonitor_AddGestureFailedCallback_UnityAction_Gestures_GestureMetaData__" data-uid="Gestures.GestureMonitor.AddGestureFailedCallback(UnityAction{Gestures.GestureMetaData})">AddGestureFailedCallback(UnityAction&lt;GestureMetaData&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add an event listener for when a user fails to complete a valid Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddGestureFailedCallback(UnityAction&lt;GestureMetaData&gt; eve)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityAction</span>&lt;<a class="xref" href="Gestures.GestureMetaData.html">GestureMetaData</a>&gt;</td>
        <td><span class="parametername">eve</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_AddGestureStartCallback_" data-uid="Gestures.GestureMonitor.AddGestureStartCallback*"></a>
  <h4 id="Gestures_GestureMonitor_AddGestureStartCallback_UnityAction_" data-uid="Gestures.GestureMonitor.AddGestureStartCallback(UnityAction)">AddGestureStartCallback(UnityAction)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add an event listener for when a user starts drawing a Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddGestureStartCallback(UnityAction eve)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityAction</span></td>
        <td><span class="parametername">eve</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_ClearBuffer_" data-uid="Gestures.GestureMonitor.ClearBuffer*"></a>
  <h4 id="Gestures_GestureMonitor_ClearBuffer" data-uid="Gestures.GestureMonitor.ClearBuffer">ClearBuffer()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Clear the buffer of all Transforms and erase all positions from the attached LineRenderer</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ClearBuffer()</code></pre>
  </div>
  
  
  <a id="Gestures_GestureMonitor_GetDataBuffer_" data-uid="Gestures.GestureMonitor.GetDataBuffer*"></a>
  <h4 id="Gestures_GestureMonitor_GetDataBuffer" data-uid="Gestures.GestureMonitor.GetDataBuffer">GetDataBuffer()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Get the data buffer used by this monitor</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public GTransformBuffer GetDataBuffer()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Gestures.GTransformBuffer.html">GTransformBuffer</a></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Return the class&apos;s GTransformBuffer</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_GetGestureMap_" data-uid="Gestures.GestureMonitor.GetGestureMap*"></a>
  <h4 id="Gestures_GestureMonitor_GetGestureMap" data-uid="Gestures.GestureMonitor.GetGestureMap">GetGestureMap()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Get the Dictionary storing Gestures and names.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Dictionary&lt;string, Gesture&gt; GetGestureMap()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;<span class="xref">System.String</span>, <a class="xref" href="Gestures.Gesture.html">Gesture</a>&gt;</td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Dictionary mapping Gesture names to gestures</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_GetViewNormalizer_" data-uid="Gestures.GestureMonitor.GetViewNormalizer*"></a>
  <h4 id="Gestures_GestureMonitor_GetViewNormalizer" data-uid="Gestures.GestureMonitor.GetViewNormalizer">GetViewNormalizer()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Get the data normalizer used by this monitor</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Normalizer GetViewNormalizer()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Gestures.Normalizer.html">Normalizer</a></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Return the class&apos;s ViewNormalizer</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_RemoveAllGestureCompleteCallbacks_" data-uid="Gestures.GestureMonitor.RemoveAllGestureCompleteCallbacks*"></a>
  <h4 id="Gestures_GestureMonitor_RemoveAllGestureCompleteCallbacks" data-uid="Gestures.GestureMonitor.RemoveAllGestureCompleteCallbacks">RemoveAllGestureCompleteCallbacks()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove all event listeners for when a user completes a valid Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RemoveAllGestureCompleteCallbacks()</code></pre>
  </div>
  
  
  <a id="Gestures_GestureMonitor_RemoveAllGestureFailedCallbacks_" data-uid="Gestures.GestureMonitor.RemoveAllGestureFailedCallbacks*"></a>
  <h4 id="Gestures_GestureMonitor_RemoveAllGestureFailedCallbacks" data-uid="Gestures.GestureMonitor.RemoveAllGestureFailedCallbacks">RemoveAllGestureFailedCallbacks()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove all event listeners for when a user fails to complete a valid Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RemoveAllGestureFailedCallbacks()</code></pre>
  </div>
  
  
  <a id="Gestures_GestureMonitor_RemoveAllGestureStartCallbacks_" data-uid="Gestures.GestureMonitor.RemoveAllGestureStartCallbacks*"></a>
  <h4 id="Gestures_GestureMonitor_RemoveAllGestureStartCallbacks" data-uid="Gestures.GestureMonitor.RemoveAllGestureStartCallbacks">RemoveAllGestureStartCallbacks()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove all event listeners for when a user starts drawing a Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RemoveAllGestureStartCallbacks()</code></pre>
  </div>
  
  
  <a id="Gestures_GestureMonitor_RemoveGestureCompleteCallback_" data-uid="Gestures.GestureMonitor.RemoveGestureCompleteCallback*"></a>
  <h4 id="Gestures_GestureMonitor_RemoveGestureCompleteCallback_UnityAction_Gestures_GestureMetaData__" data-uid="Gestures.GestureMonitor.RemoveGestureCompleteCallback(UnityAction{Gestures.GestureMetaData})">RemoveGestureCompleteCallback(UnityAction&lt;GestureMetaData&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove an event listener for when a user completes a valid Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RemoveGestureCompleteCallback(UnityAction&lt;GestureMetaData&gt; eve)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityAction</span>&lt;<a class="xref" href="Gestures.GestureMetaData.html">GestureMetaData</a>&gt;</td>
        <td><span class="parametername">eve</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_RemoveGestureFailedCallback_" data-uid="Gestures.GestureMonitor.RemoveGestureFailedCallback*"></a>
  <h4 id="Gestures_GestureMonitor_RemoveGestureFailedCallback_UnityAction_Gestures_GestureMetaData__" data-uid="Gestures.GestureMonitor.RemoveGestureFailedCallback(UnityAction{Gestures.GestureMetaData})">RemoveGestureFailedCallback(UnityAction&lt;GestureMetaData&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove an event listener for when a user fails to complete a valid Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RemoveGestureFailedCallback(UnityAction&lt;GestureMetaData&gt; eve)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityAction</span>&lt;<a class="xref" href="Gestures.GestureMetaData.html">GestureMetaData</a>&gt;</td>
        <td><span class="parametername">eve</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_RemoveGestureStartCallback_" data-uid="Gestures.GestureMonitor.RemoveGestureStartCallback*"></a>
  <h4 id="Gestures_GestureMonitor_RemoveGestureStartCallback_UnityAction_" data-uid="Gestures.GestureMonitor.RemoveGestureStartCallback(UnityAction)">RemoveGestureStartCallback(UnityAction)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove an event listeners for when a user starts drawing a Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RemoveGestureStartCallback(UnityAction eve)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityAction</span></td>
        <td><span class="parametername">eve</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_SetBufferWrap_" data-uid="Gestures.GestureMonitor.SetBufferWrap*"></a>
  <h4 id="Gestures_GestureMonitor_SetBufferWrap_System_Boolean_" data-uid="Gestures.GestureMonitor.SetBufferWrap(System.Boolean)">SetBufferWrap(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Set whether the buffer should act as a standard array or a circular array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SetBufferWrap(bool circular)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">circular</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1"><code>True</code> if the buffer should wrap, <code>False</code> otherwise</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_SetMaxBufferSize_" data-uid="Gestures.GestureMonitor.SetMaxBufferSize*"></a>
  <h4 id="Gestures_GestureMonitor_SetMaxBufferSize_System_Int32_" data-uid="Gestures.GestureMonitor.SetMaxBufferSize(System.Int32)">SetMaxBufferSize(Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Set the max capacity of the transform buffer</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SetMaxBufferSize(int size)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">size</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Set the number of GTransforms that the buffer can hold. Default is 512</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_SetTrackAllGestures_" data-uid="Gestures.GestureMonitor.SetTrackAllGestures*"></a>
  <h4 id="Gestures_GestureMonitor_SetTrackAllGestures_System_Boolean_" data-uid="Gestures.GestureMonitor.SetTrackAllGestures(System.Boolean)">SetTrackAllGestures(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Set the tracking state for all Gestures</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SetTrackAllGestures(bool enabled)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">enabled</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1"><code>True</code> if all Gestures should be enabled, <code>False</code> otherwise</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_SetTrackGesture_" data-uid="Gestures.GestureMonitor.SetTrackGesture*"></a>
  <h4 id="Gestures_GestureMonitor_SetTrackGesture_System_Collections_Generic_List_System_String__System_Boolean_" data-uid="Gestures.GestureMonitor.SetTrackGesture(System.Collections.Generic.List{System.String},System.Boolean)">SetTrackGesture(List&lt;String&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Set the tracking state for a list of Gestures</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SetTrackGesture(List&lt;string&gt; names, bool enabled)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td><span class="parametername">names</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The names of all Gestures to set the tracking state of</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">enabled</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1"><code>True</code> if the Gestures should be enabled, <code>False</code> otherwise</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Gestures_GestureMonitor_SetTrackGesture_" data-uid="Gestures.GestureMonitor.SetTrackGesture*"></a>
  <h4 id="Gestures_GestureMonitor_SetTrackGesture_System_String_System_Boolean_" data-uid="Gestures.GestureMonitor.SetTrackGesture(System.String,System.Boolean)">SetTrackGesture(String, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Set the tracking state for a single Gesture</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SetTrackGesture(string gname, bool enabled)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">gname</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The name of the Gesture to set the tracking state of</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">enabled</span></td>
        <td><p sourcefile="obj/api/Gestures.GestureMonitor.yml" sourcestartlinenumber="1" sourceendlinenumber="1"><code>True</code> if the Gesture should be enabled, <code>False</code> otherwise</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
